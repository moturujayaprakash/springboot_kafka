package com.example.controller;



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.kafka.support.SendResult;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.domain.MessageEvent;
import com.example.producer.MessageEventProducer;
import com.fasterxml.jackson.core.JsonProcessingException;

import lombok.extern.slf4j.Slf4j;
@Slf4j
@RestController
public class MessageEventsController {

	@Autowired
	private MessageEventProducer messageEventProducer;
	
	@PostMapping("/v1/me")
	@ResponseBody
	public ResponseEntity<MessageEvent> createMessageEvent(@RequestBody MessageEvent messageEvent) throws JsonProcessingException {
		log.info("createMessage from Controller Entry point");
		System.out.println(messageEvent);
		
		log.info("MessageEventController before sendMessage method");
		//SendResult<Integer,String> sendResult=messageEventProducer.sendMessageSynchronous(messageEvent);
		SendResult<Integer,String> sendResult=messageEventProducer.sendMessageWithTopic(messageEvent)
		log.info(sendResult.toString());
		log.info("MessageEventController after sendMessage method");
		return ResponseEntity.status(HttpStatus.CREATED).body(messageEvent);
	}
}
